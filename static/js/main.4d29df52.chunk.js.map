{"version":3,"sources":["components/CharacterCard/CharacterCard.js","memoryCards..js","components/Navbar/Navbar.js","components/Wrapper.js","App.js","index.js"],"names":["Image","styled","img","_templateObject","_taggedTemplateLiteral","CharacterCard","_ref","id","image","registerClick","React","createElement","value","onClick","alt","src","memoryCards","Container","div","Navbar","score","topScore","rightOrWrong","Wrapper","children","ReadyToPlayBtn","_templateObject2","App","_useState","useState","_useState2","_slicedToArray","characters","setCharacters","_useState3","_useState4","currentScore","setCurrentScore","_useState5","_useState6","setTopScore","_useState7","_useState8","setRightOrWrong","_useState9","_useState10","clicked","setClicked","_useState11","_useState12","showPlay","setShowPlay","indexOf","handleIncrement","concat","resetGame","handleShuffle","shuffledCards","map","a","sort","Math","random","b","newScore","style","character","k","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d29df52.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Image = styled.img`\n  width: 100%;\n  max-width: 200px;\n  aspect-ratio: 1/1;\n  display: flex;\n  background: rgb(255, 254, 254);\n  cursor: pointer;\n  border: 4px rgb(99, 99, 99) solid;\n  border-radius: 2px;\n  box-shadow: 4px 4px 10px rgb(56, 56, 56);\n  transition: all 0.25s ease-in-out;\n\n  :hover {\n    background: rgb(195, 195, 195);\n    transform: scale(1.1);\n    box-shadow: 8px 8px 20px rgb(56, 56, 56);\n  }\n\n  :active {\n    transform: translate(1px, 1px);\n  }\n`;\n\nconst CharacterCard = ({ id, image, registerClick }) => (\n  <div value={id} onClick={() => registerClick(id)}>\n    <Image alt={id} src={image} />\n  </div>\n);\n\nexport default CharacterCard;\n","const memoryCards = () => [\n  {\n    id: 1,\n    image: './assets/super-mario.png',\n  },\n  {\n    id: 2,\n    image: './assets/super-mario2.png',\n  },\n  {\n    id: 3,\n    image: './assets/carnivorous-plant.png',\n  },\n  {\n    id: 4,\n    image: './assets/mushroom.png',\n  },\n  {\n    id: 5,\n    image: './assets/mushroom2.png',\n  },\n  {\n    id: 6,\n    image: './assets/coins.png',\n  },\n  {\n    id: 7,\n    image: './assets/game.png',\n  },\n  {\n    id: 8,\n    image: './assets/mario.png',\n  },\n  {\n    id: 9,\n    image: './assets/plant.png',\n  },\n  {\n    id: 10,\n    image: './assets/star.png',\n  },\n  {\n    id: 11,\n    image: './assets/super-mario-logo.png',\n  },\n  {\n    id: 12,\n    image: './assets/super-mario3.png',\n  },\n];\n\nexport default memoryCards;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  background: #121212;\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n  color: #fff;\n  width: 100%;\n  @media screen and (min-width: 520px) {\n    width: 150px;\n    height: 100vh;\n  }\n`;\n\nconst Navbar = ({ score, topScore, rightOrWrong }) => (\n  <Container>\n    <div>Current Score: {score}</div>\n    <div>Top Score: {topScore}</div>\n    <div>{rightOrWrong}</div>\n  </Container>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 849px;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  margin-inline: auto;\n  gap: 16px;\n  margin-top: 48px;\n  padding: 8px;\n  height: fit-content;\n  @media screen and (min-width: 520px) {\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n  }\n`;\n\nconst Wrapper = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n\nexport default Wrapper;\n","import React, { useState } from 'react';\nimport CharacterCard from './components/CharacterCard';\nimport memoryCards from './memoryCards.';\nimport Navbar from './components/Navbar';\nimport Wrapper from './components/Wrapper';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  @media screen and (min-width: 520px) {\n    flex-direction: row;\n    height: 100vh;\n  }\n`;\n\nconst ReadyToPlayBtn = styled.div`\n  width: 250px;\n  height: 100px;\n  border-radius: 30px;\n  background: linear-gradient(to bottom, #7cd5fc, #193b98);\n  margin: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  font-size: 36px;\n  font-family: 'Orbitron', sans-serif;\n  filter: drop-shadow(0 35px 10px rgb(0 0 0 / 0.5));\n  letter-spacing: 4px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: 300ms;\n  :active {\n    transform: translateY(10px);\n  }\n`;\n\nconst App = () => {\n  const [characters, setCharacters] = useState(memoryCards);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [topScore, setTopScore] = useState(0);\n  const [rightOrWrong, setRightOrWrong] = useState('');\n  const [clicked, setClicked] = useState([]);\n  const [showPlay, setShowPlay] = useState(true);\n\n  const registerClick = id => {\n    if (clicked.indexOf(id) === -1) {\n      handleIncrement();\n      setClicked(clicked.concat(id));\n    } else {\n      resetGame();\n    }\n  };\n\n  const shuffleCards = () => {\n    const arr = characters;\n    const shuffle = arr\n      .map(a => ({ sort: Math.random(), value: a }))\n      .sort((a, b) => a.sort - b.sort)\n      .map(a => a.value);\n\n    return shuffle;\n  };\n\n  const handleShuffle = () => {\n    const shuffledCards = shuffleCards();\n    setCharacters(shuffledCards);\n  };\n\n  const handleIncrement = () => {\n    const newScore = currentScore + 1;\n    setCurrentScore(newScore);\n    setRightOrWrong('Correct!');\n\n    if (newScore >= topScore) {\n      setTopScore(newScore);\n    }\n    if (newScore === 12) {\n      setCurrentScore(0);\n      setClicked([]);\n      setRightOrWrong('You Won!! Click on any icon to initiate new game!');\n    }\n    handleShuffle();\n  };\n\n  const resetGame = () => {\n    setCurrentScore(0);\n    setClicked([]);\n    setRightOrWrong('Wrong!');\n    setTopScore(topScore);\n    setShowPlay(true);\n    handleShuffle();\n  };\n\n  return (\n    <Container style={{}}>\n      <Navbar\n        score={currentScore}\n        topScore={topScore}\n        rightOrWrong={rightOrWrong}\n      />\n      {showPlay ? (\n        <ReadyToPlayBtn onClick={() => setShowPlay(false)}>PLAY</ReadyToPlayBtn>\n      ) : (\n        <Wrapper>\n          {characters.map((character, k) => (\n            <CharacterCard\n              key={character.id}\n              id={character.id}\n              image={character.image}\n              registerClick={registerClick}\n            />\n          ))}\n        </Wrapper>\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}