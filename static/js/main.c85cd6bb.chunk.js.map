{"version":3,"sources":["components/CharacterCard/CharacterCard.js","components/Column/Column.js","components/Navbar/Navbar.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["CharacterCard","props","React","createElement","className","value","id","onClick","registerClick","alt","name","src","image","Column","size","split","map","join","children","Navbar","title","rightOrWrong","score","topScore","Wrapper","App","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","state","characters","currentScore","clicked","indexOf","handleIncrement","setState","resetGame","shuffleCards","shuffle","a","sort","Math","random","b","console","log","handleShuffle","shuffledCards","newScore","_inherits","_createClass","key","_this2","character","k","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c85cd6bb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./CharacterCard.css\";\n\nconst CharacterCard = props => (\n  <div\n    className = \"card\"\n      value = {props.id}\n      onClick = { () => props.registerClick(props.id)}\n  >\n    <div className = \"img-container \">\n      <img \n        alt = {props.name}\n        src = {props.image} \n      />\n    </div>\n  </div>\n);\n\nexport default CharacterCard;","import React from \"react\";\n\nconst Column = props => {\n    const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n    return (\n        <div className={size}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Column;","import React from \"react\";\nimport \"./Navbar.css\";\n\nconst Navbar = props => (\n    <div className=\"container\">\n        <div className=\"row\">\n            <nav>\n            <ul>\n                <div id=\"brand\">{props.title}</div>\n                <div id=\"rightOrWrong\">{props.rightOrWrong}</div>\n                <div id=\"current_score\">Current Score: {props.score}</div>\n                <div id=\"topScore\">Top Score: {props.topScore}</div>\n            </ul>\n            </nav>\n        </div>\n    </div>\n    \n);\n\nexport default Navbar;","import React from \"react\";\n\nconst Wrapper = props => <div className = \"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React, { Component } from 'react';\nimport CharacterCard from \"./components/CharacterCard\";\nimport characters from \"./friends.json\";\nimport Column from \"./components/Column\";\nimport Navbar from \"./components/Navbar\";\nimport Wrapper from \"./components/Wrapper\";\n\n\nclass App extends Component {\n  state = {\n    characters,\n    currentScore: 0,\n    topScore: 0,\n    rightOrWrong: \"\",\n    clicked:[],\n  };\n\n  registerClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    }\n    else {\n    this.resetGame();\n    \n    }\n  };\n\n  shuffleCards = () => {\n    const arr = characters;\n    const shuffle = arr.map((a) => ({sort: Math.random(), value:a}))\n      .sort((a, b) => a.sort - b.sort)\n      .map((a) => a.value)\n      console.log(shuffle)\n      return shuffle;\n  };\n\n  handleShuffle = () => {\n    const shuffledCards = this.shuffleCards(characters);\n    console.log(shuffledCards);\n    this.setState({characters: shuffledCards});\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1;\n    console.log(newScore);\n    this.setState({\n      currentScore: newScore,\n      rightOrWrong: \"Correct!\"\n    });\n    if (newScore >= this.state.topScore) {\n      this.setState({topScore:newScore});\n    } \n    if (newScore === 12) {\n      this.setState({\n        currentScore: 0,\n        clicked:[],\n        rightOrWrong:'You Won!! Click on any icon to initiate new game!'\n      });\n    }\n    this.handleShuffle()\n  };\n\n  resetGame = () => {\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore,\n      rightOrWrong: \"Wrong!\",\n      clicked: [],\n    });\n     this.handleShuffle();\n     \n  };\n  \n  render() {\n    return (\n      <Wrapper>\n       <Navbar\n        score={ this.state.currentScore}\n        topScore = { this.state.topScore}\n        rightOrWrong={this.state.rightOrWrong}\n        />\n        {this.state.characters.map((character, k) => (\n          <Column key={k} size=\" xs-3 sm-3 md-3\">\n            <CharacterCard\n              registerClick = {this.registerClick}\n              handleIncrement = {this.handleIncrement}\n              handleShuffle = {this.handleShuffle}\n              resetGame = {this.resetGame}\n              key = {character.id}\n              id = {character.id}\n              image = {character.image}\n            />\n          </Column>\n      ))}\n    </Wrapper>\n    )\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}